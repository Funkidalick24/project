{"version":3,"file":"main-9a05b347.js","sources":["../../../app.js"],"sourcesContent":["import TravelAPI from './booking-api.js';\r\n\r\nclass App {\r\n    constructor() {\r\n        this.travelAPI = new TravelAPI();\r\n        this.initializeApp();\r\n        this.setupEventListeners();\r\n    }\r\n\r\n    async initializeApp() {\r\n        await Promise.all([\r\n            this.loadTopAttractions(),\r\n            this.setupCurrencyConverter()\r\n        ]);\r\n    }\r\n\r\n    setupEventListeners() {\r\n        // CTA button\r\n        const ctaButton = document.querySelector('.cta-button');\r\n        if (ctaButton) {\r\n            ctaButton.addEventListener('click', () => {\r\n                window.location.href = 'itinerary.html';\r\n            });\r\n        }\r\n\r\n        // Currency converter\r\n        const convertBtn = document.getElementById('convert-btn');\r\n        if (convertBtn) {\r\n            convertBtn.addEventListener('click', this.handleCurrencyConversion.bind(this));\r\n        }\r\n    }\r\n\r\n    async loadTopAttractions() {\r\n        const container = document.getElementById('attractions-container');\r\n        if (!container) return;\r\n\r\n        try {\r\n            // Show loading state\r\n            container.innerHTML = '<div class=\"loading\">Loading top attractions...</div>';\r\n\r\n            // Fetch attractions from API\r\n            const attractions = await this.travelAPI.getTopAttractions(4);\r\n\r\n            if (!attractions || attractions.length === 0) {\r\n                throw new Error('No attractions found');\r\n            }\r\n\r\n            container.innerHTML = attractions.map(attraction => `\r\n                <div class=\"attraction-card\">\r\n                    <div class=\"attraction-image\">\r\n                        <img src=\"${attraction.image}\" alt=\"${attraction.name}\" \r\n                            onerror=\"this.src='assets/images/placeholder.jpg'\">\r\n                    </div>\r\n                    <div class=\"attraction-content\">\r\n                        <h3>${attraction.name}</h3>\r\n                        <p class=\"location\">${attraction.location.city}, ${attraction.location.country}</p>\r\n                        <div class=\"rating\">\r\n                            <div class=\"stars\">\r\n                                ${'★'.repeat(Math.floor(attraction.rating))}${attraction.rating % 1 >= 0.5 ? '½' : ''}\r\n                            </div>\r\n                            <span class=\"review-count\">${(attraction.reviews/1000).toFixed(0)}K reviews</span>\r\n                        </div>\r\n                        <p class=\"description\">${attraction.description}</p>\r\n                        <button class=\"explore-button\" data-id=\"${attraction.id}\">Explore</button>\r\n                    </div>\r\n                </div>\r\n            `).join('');\r\n\r\n            // Add click handlers for explore buttons\r\n            container.querySelectorAll('.explore-button').forEach((button) => {\r\n                button.addEventListener('click', () => {\r\n                    const attractionId = button.dataset.id;\r\n                    window.location.href = `attractions.html?id=${attractionId}`;\r\n                });\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error loading attractions:', error);\r\n            container.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>Error Loading Attractions</h3>\r\n                    <p>Please try refreshing the page</p>\r\n                </div>`;\r\n        }\r\n    }\r\n\r\n    showError(message) {\r\n        const container = document.getElementById('attractions-container');\r\n        if (container) {\r\n            container.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>Error</h3>\r\n                    <p>${message}</p>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n\r\n    async setupCurrencyConverter() {\r\n        const currencies = ['USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD'];\r\n        const fromSelect = document.getElementById('from-currency');\r\n        const toSelect = document.getElementById('to-currency');\r\n        \r\n        // Populate currency dropdowns\r\n        currencies.forEach(currency => {\r\n            fromSelect.innerHTML += `<option value=\"${currency}\">${currency}</option>`;\r\n            toSelect.innerHTML += `<option value=\"${currency}\">${currency}</option>`;\r\n        });\r\n\r\n        // Convert button click handler\r\n        document.getElementById('convert-btn').addEventListener('click', async () => {\r\n            const amount = document.getElementById('amount').value;\r\n            const from = fromSelect.value;\r\n            const to = toSelect.value;\r\n            \r\n            try {\r\n                // In a real application, you would call an actual API here\r\n                const result = await mockConvertCurrency(amount, from, to);\r\n                document.getElementById('result').textContent = \r\n                    `${amount} ${from} = ${result.toFixed(2)} ${to}`;\r\n            } catch (error) {\r\n                console.error('Conversion failed:', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    async handleCurrencyConversion() {\r\n        // Currency conversion handler\r\n        // (Keep existing implementation if you have one)\r\n    }\r\n}\r\n\r\n// Initialize the app when the page loads\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new App();\r\n});\r\n\r\n// Mock currency conversion function\r\nfunction mockConvertCurrency(amount, from, to) {\r\n    return new Promise((resolve) => {\r\n        // Mock exchange rates\r\n        const rates = {\r\n            'USD': 1,\r\n            'EUR': 0.85,\r\n            'GBP': 0.73,\r\n            'JPY': 110.5,\r\n            'AUD': 1.35,\r\n            'CAD': 1.25\r\n        };\r\n        \r\n        const result = (amount / rates[from]) * rates[to];\r\n        resolve(result);\r\n    });\r\n}\r\n\r\n// Add smooth scrolling for navigation links\r\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n    });\r\n});\r\n\r\n// Add this to your existing app.js\r\nfunction addRippleEffect(event) {\r\n    const button = event.currentTarget;\r\n    \r\n    // Remove any existing ripple elements\r\n    const ripples = button.getElementsByClassName('ripple');\r\n    while (ripples.length > 0) {\r\n        ripples[0].remove();\r\n    }\r\n\r\n    // Create new ripple element\r\n    const ripple = document.createElement('span');\r\n    ripple.classList.add('ripple');\r\n    button.appendChild(ripple);\r\n\r\n    // Get position\r\n    const rect = button.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    \r\n    ripple.style.width = ripple.style.height = size + 'px';\r\n    ripple.style.left = event.clientX - rect.left - size/2 + 'px';\r\n    ripple.style.top = event.clientY - rect.top - size/2 + 'px';\r\n\r\n    // Remove ripple after animation\r\n    ripple.addEventListener('animationend', () => {\r\n        ripple.remove();\r\n    });\r\n}\r\n\r\n// Add ripple effect to all buttons when the page loads\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const buttons = document.querySelectorAll('.primary-button, .secondary-button, .cta-button, .search-button');\r\n    buttons.forEach(button => {\r\n        button.addEventListener('click', addRippleEffect);\r\n    });\r\n}); "],"names":["App","constructor","this","travelAPI","TravelAPI","initializeApp","setupEventListeners","Promise","all","loadTopAttractions","setupCurrencyConverter","ctaButton","document","querySelector","addEventListener","window","location","href","convertBtn","getElementById","handleCurrencyConversion","bind","container","innerHTML","attractions","getTopAttractions","length","Error","map","attraction","image","name","city","country","repeat","Math","floor","rating","reviews","toFixed","description","id","join","querySelectorAll","forEach","button","attractionId","dataset","error","showError","message","fromSelect","toSelect","currency","async","amount","value","from","to","result","resolve","rates","USD","EUR","GBP","JPY","AUD","CAD","mockConvertCurrency","textContent","addRippleEffect","event","currentTarget","ripples","getElementsByClassName","remove","ripple","createElement","classList","add","appendChild","rect","getBoundingClientRect","size","max","width","height","style","left","clientX","top","clientY","anchor","e","preventDefault","getAttribute","scrollIntoView","behavior"],"mappings":"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"}