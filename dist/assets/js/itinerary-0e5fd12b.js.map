{"version":3,"file":"itinerary-0e5fd12b.js","sources":["../../../itinerary.js"],"sourcesContent":["import TravelAPI from './booking-api.js';\r\n\r\n// Itinerary Management System\r\nclass ItineraryManager {\r\n    constructor() {\r\n        this.currentItinerary = null;\r\n        this.savedItineraries = [];\r\n        this.travelAPI = new TravelAPI();\r\n        this.initializeEventListeners();\r\n        this.loadSavedItineraries();\r\n        this.addRippleEffectToButtons();\r\n        this.initializeBookingListeners();\r\n        this.setupAutocomplete();\r\n    }\r\n\r\n    initializeEventListeners() {\r\n        // New Itinerary Button\r\n        document.getElementById('new-itinerary').addEventListener('click', () => this.createNewItinerary());\r\n        \r\n        // Save Itinerary Button\r\n        document.getElementById('save-itinerary').addEventListener('click', () => this.saveItinerary());\r\n        \r\n        // Share Itinerary Button\r\n        document.getElementById('share-itinerary').addEventListener('click', () => this.shareItinerary());\r\n        \r\n        // Date Change Listeners\r\n        document.getElementById('trip-start').addEventListener('change', () => this.updateDays());\r\n        document.getElementById('trip-end').addEventListener('change', () => this.updateDays());\r\n    }\r\n\r\n    initializeBookingListeners() {\r\n        document.getElementById('search-flights').addEventListener('click', () => this.searchFlights());\r\n        document.getElementById('search-everywhere').addEventListener('click', () => this.searchEverywhereFromCity());\r\n        document.getElementById('search-hotels').addEventListener('click', () => this.searchHotels());\r\n    }\r\n\r\n    createNewItinerary() {\r\n        this.currentItinerary = {\r\n            name: '',\r\n            startDate: null,\r\n            endDate: null,\r\n            days: []\r\n        };\r\n        \r\n        // Reset form\r\n        document.getElementById('trip-name').value = '';\r\n        document.getElementById('trip-start').value = '';\r\n        document.getElementById('trip-end').value = '';\r\n        document.getElementById('itinerary-days').innerHTML = '';\r\n    }\r\n\r\n    updateDays() {\r\n        const startDate = new Date(document.getElementById('trip-start').value);\r\n        const endDate = new Date(document.getElementById('trip-end').value);\r\n        \r\n        if (startDate && endDate && startDate <= endDate) {\r\n            const daysContainer = document.getElementById('itinerary-days');\r\n            daysContainer.innerHTML = '';\r\n            \r\n            let currentDate = new Date(startDate);\r\n            while (currentDate <= endDate) {\r\n                this.addDayToItinerary(currentDate);\r\n                currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addDayToItinerary(date) {\r\n        const dayElement = document.createElement('div');\r\n        dayElement.className = 'itinerary-day';\r\n        dayElement.innerHTML = `\r\n            <h3>${date.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h3>\r\n            <div class=\"activities\">\r\n                <button class=\"add-activity\" data-date=\"${date.toISOString()}\">+ Add Activity</button>\r\n            </div>\r\n        `;\r\n        \r\n        document.getElementById('itinerary-days').appendChild(dayElement);\r\n        \r\n        // Add Activity Button Listener\r\n        dayElement.querySelector('.add-activity').addEventListener('click', (e) => {\r\n            this.addActivity(e.target.dataset.date);\r\n        });\r\n    }\r\n\r\n    addActivity(date) {\r\n        const activityElement = document.createElement('div');\r\n        activityElement.className = 'activity';\r\n        activityElement.innerHTML = `\r\n            <input type=\"time\" class=\"activity-time\">\r\n            <input type=\"text\" class=\"activity-description\" placeholder=\"Enter activity description\">\r\n            <button class=\"remove-activity\">×</button>\r\n        `;\r\n        \r\n        const activitiesContainer = document.querySelector(`[data-date=\"${date}\"]`).parentElement;\r\n        activitiesContainer.insertBefore(activityElement, activitiesContainer.lastElementChild);\r\n        \r\n        // Remove Activity Button Listener\r\n        activityElement.querySelector('.remove-activity').addEventListener('click', () => {\r\n            activityElement.remove();\r\n        });\r\n    }\r\n\r\n    saveItinerary() {\r\n        const name = document.getElementById('trip-name').value;\r\n        if (!name) {\r\n            alert('Please enter a trip name');\r\n            return;\r\n        }\r\n\r\n        const itinerary = {\r\n            name: name,\r\n            startDate: document.getElementById('trip-start').value,\r\n            endDate: document.getElementById('trip-end').value,\r\n            days: this.collectActivities()\r\n        };\r\n\r\n        // Save to localStorage\r\n        const savedItineraries = JSON.parse(localStorage.getItem('itineraries') || '[]');\r\n        savedItineraries.push(itinerary);\r\n        localStorage.setItem('itineraries', JSON.stringify(savedItineraries));\r\n        \r\n        this.loadSavedItineraries();\r\n        alert('Itinerary saved successfully!');\r\n    }\r\n\r\n    collectActivities() {\r\n        const days = [];\r\n        document.querySelectorAll('.itinerary-day').forEach(dayElement => {\r\n            const activities = [];\r\n            dayElement.querySelectorAll('.activity').forEach(activity => {\r\n                activities.push({\r\n                    time: activity.querySelector('.activity-time').value,\r\n                    description: activity.querySelector('.activity-description').value\r\n                });\r\n            });\r\n            days.push({\r\n                date: dayElement.querySelector('h3').textContent,\r\n                activities: activities\r\n            });\r\n        });\r\n        return days;\r\n    }\r\n\r\n    loadSavedItineraries() {\r\n        const savedItineraries = JSON.parse(localStorage.getItem('itineraries') || '[]');\r\n        const listElement = document.getElementById('itinerary-list');\r\n        listElement.innerHTML = '';\r\n        \r\n        savedItineraries.forEach(itinerary => {\r\n            const li = document.createElement('li');\r\n            li.textContent = itinerary.name;\r\n            li.addEventListener('click', () => this.loadItinerary(itinerary));\r\n            listElement.appendChild(li);\r\n        });\r\n    }\r\n\r\n    loadItinerary(itinerary) {\r\n        document.getElementById('trip-name').value = itinerary.name;\r\n        document.getElementById('trip-start').value = itinerary.startDate;\r\n        document.getElementById('trip-end').value = itinerary.endDate;\r\n        this.updateDays();\r\n        // TODO: Load activities for each day\r\n    }\r\n\r\n    shareItinerary() {\r\n        // Implement sharing functionality (e.g., generate shareable link or export to PDF)\r\n        alert('Sharing functionality coming soon!');\r\n    }\r\n\r\n    addRippleEffectToButtons() {\r\n        const buttons = document.querySelectorAll('.primary-button, .secondary-button, .add-activity');\r\n        buttons.forEach(button => {\r\n            button.addEventListener('click', this.addRippleEffect);\r\n        });\r\n    }\r\n\r\n    addRippleEffect(event) {\r\n        const button = event.currentTarget;\r\n        \r\n        // Remove any existing ripple elements\r\n        const ripples = button.getElementsByClassName('ripple');\r\n        while (ripples.length > 0) {\r\n            ripples[0].remove();\r\n        }\r\n\r\n        // Create new ripple element\r\n        const ripple = document.createElement('span');\r\n        ripple.classList.add('ripple');\r\n        button.appendChild(ripple);\r\n\r\n        // Get position\r\n        const rect = button.getBoundingClientRect();\r\n        const size = Math.max(rect.width, rect.height);\r\n        \r\n        ripple.style.width = ripple.style.height = size + 'px';\r\n        ripple.style.left = event.clientX - rect.left - size/2 + 'px';\r\n        ripple.style.top = event.clientY - rect.top - size/2 + 'px';\r\n\r\n        // Remove ripple after animation\r\n        ripple.addEventListener('animationend', () => {\r\n            ripple.remove();\r\n        });\r\n    }\r\n\r\n    setupAutocomplete() {\r\n        const fromInput = document.getElementById('flight-from');\r\n        const toInput = document.getElementById('flight-to');\r\n        \r\n        this.setupCityAutocomplete(fromInput, 'from');\r\n        this.setupCityAutocomplete(toInput, 'to');\r\n    }\r\n\r\n    setupCityAutocomplete(input, type) {\r\n        let debounceTimer;\r\n        const suggestionsContainer = document.getElementById(`${type}-suggestions`);\r\n        const codeInput = document.getElementById(`flight-${type}-code`);\r\n\r\n        // Wrap input in container if not already wrapped\r\n        if (!input.parentElement.classList.contains('location-input-container')) {\r\n            const container = document.createElement('div');\r\n            container.className = 'location-input-container';\r\n            input.parentNode.insertBefore(container, input);\r\n            container.appendChild(input);\r\n        }\r\n\r\n        input.addEventListener('input', () => {\r\n            clearTimeout(debounceTimer);\r\n            suggestionsContainer.classList.remove('active');\r\n\r\n            const query = input.value.trim();\r\n            if (query.length < 2) return;\r\n\r\n            debounceTimer = setTimeout(async () => {\r\n                try {\r\n                    const suggestions = await this.travelAPI.getCitySuggestions(query, {\r\n                        category: 'geos',\r\n                        language: 'en'\r\n                    });\r\n\r\n                    if (!suggestions || suggestions.length === 0) {\r\n                        suggestionsContainer.innerHTML = '<div class=\"no-results\">No locations found</div>';\r\n                        suggestionsContainer.classList.add('active');\r\n                        return;\r\n                    }\r\n\r\n                    suggestionsContainer.innerHTML = suggestions.map(location => `\r\n                        <div class=\"suggestion-item\" data-id=\"${location.id}\">\r\n                            <div class=\"suggestion-main\">\r\n                                <div class=\"suggestion-name\">\r\n                                    ${location.name}\r\n                                    ${location.code ? `<span class=\"airport-code\">(${location.code})</span>` : ''}\r\n                                </div>\r\n                                <div class=\"suggestion-details\">\r\n                                    ${location.type === 'airport' ? '✈️ Airport in ' : ''}\r\n                                    ${location.address.city ? `<span>${location.address.city}</span>` : ''}\r\n                                    ${location.address.state ? `<span>${location.address.state}</span>` : ''}\r\n                                    ${location.address.country ? `<span>${location.address.country}</span>` : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    `).join('');\r\n\r\n                    suggestionsContainer.classList.add('active');\r\n\r\n                    // Add click handlers for suggestions\r\n                    suggestionsContainer.querySelectorAll('.suggestion-item').forEach(item => {\r\n                        item.addEventListener('click', () => {\r\n                            const selectedLocation = suggestions.find(loc => loc.id === item.dataset.id);\r\n                            input.value = this.formatLocationName(selectedLocation);\r\n                            codeInput.value = selectedLocation.id;\r\n                            suggestionsContainer.classList.remove('active');\r\n                        });\r\n                    });\r\n\r\n                } catch (error) {\r\n                    console.error('Error fetching suggestions:', error);\r\n                    suggestionsContainer.innerHTML = '<div class=\"error\">Error fetching locations</div>';\r\n                    suggestionsContainer.classList.add('active');\r\n                }\r\n            }, 300);\r\n        });\r\n\r\n        // Close suggestions when clicking outside\r\n        document.addEventListener('click', (e) => {\r\n            if (!input.contains(e.target) && !suggestionsContainer.contains(e.target)) {\r\n                suggestionsContainer.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Helper method to format location name\r\n    formatLocationName(location) {\r\n        const parts = [];\r\n        \r\n        parts.push(location.name);\r\n        \r\n        if (location.address.city && location.name !== location.address.city) {\r\n            parts.push(location.address.city);\r\n        }\r\n        if (location.address.state) {\r\n            parts.push(location.address.state);\r\n        }\r\n        if (location.address.country) {\r\n            parts.push(location.address.country);\r\n        }\r\n        \r\n        return parts.join(', ');\r\n    }\r\n\r\n    async searchFlights() {\r\n        const fromCode = document.getElementById('flight-from-code').value;\r\n        const toCode = document.getElementById('flight-to-code').value;\r\n        const date = document.getElementById('trip-start').value;\r\n\r\n        // Validate inputs\r\n        if (!fromCode || fromCode.length !== 3) {\r\n            alert('Please select a valid departure airport');\r\n            return;\r\n        }\r\n        if (!toCode || toCode.length !== 3) {\r\n            alert('Please select a valid arrival airport');\r\n            return;\r\n        }\r\n        if (!date || new Date(date) < new Date()) {\r\n            alert('Please select a valid future date');\r\n            return;\r\n        }\r\n\r\n        const container = document.getElementById('flight-results');\r\n        container.innerHTML = '<div class=\"loading\">Searching for flights...</div>';\r\n\r\n        try {\r\n            const results = await this.travelAPI.searchFlights(fromCode, toCode, date);\r\n            this.displayFlightResults(results.data);\r\n        } catch (error) {\r\n            console.error('Error searching flights:', error);\r\n            container.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>No Flights Found</h3>\r\n                    <p>${error.message || 'No flights available for this route and date.'}</p>\r\n                    <p>Try:</p>\r\n                    <ul>\r\n                        <li>Different dates</li>\r\n                        <li>Nearby airports</li>\r\n                        <li>Different route combinations</li>\r\n                    </ul>\r\n                </div>`;\r\n        }\r\n    }\r\n\r\n    displayFlightResults(flights) {\r\n        const container = document.getElementById('flight-results');\r\n        container.innerHTML = '';\r\n\r\n        if (!flights || flights.length === 0) {\r\n            container.innerHTML = '<div class=\"error\">No flights found for this route and date.</div>';\r\n            return;\r\n        }\r\n\r\n        flights.forEach(flight => {\r\n            const departureTime = new Date(flight.itineraries[0].segments[0].departure.at);\r\n            const arrivalTime = new Date(flight.itineraries[0].segments[0].arrival.at);\r\n            \r\n            const card = document.createElement('div');\r\n            card.className = 'result-card';\r\n            card.innerHTML = `\r\n                <h4>${flight.itineraries[0].segments[0].departure.iataCode} → \r\n                    ${flight.itineraries[0].segments[0].arrival.iataCode}</h4>\r\n                <p class=\"carrier\">${flight.carrier}</p>\r\n                <p>Departure: ${departureTime.toLocaleTimeString()}</p>\r\n                <p>Arrival: ${arrivalTime.toLocaleTimeString()}</p>\r\n                <p class=\"price\">$${flight.price.total}</p>\r\n                <button class=\"book-button\" data-flight-id=\"${flight.id}\">Book Flight</button>\r\n            `;\r\n            container.appendChild(card);\r\n        });\r\n    }\r\n\r\n    async searchHotels() {\r\n        const city = document.getElementById('hotel-city').value;\r\n        const rating = document.getElementById('hotel-rating').value;\r\n\r\n        if (!city) {\r\n            alert('Please enter a city');\r\n            return;\r\n        }\r\n\r\n        const container = document.getElementById('hotel-results');\r\n        container.innerHTML = '<div class=\"loading\">Searching for hotels...</div>';\r\n\r\n        try {\r\n            const results = await this.travelAPI.searchHotels(city, rating);\r\n            this.displayHotelResults(results.data);\r\n        } catch (error) {\r\n            console.error('Error searching hotels:', error);\r\n            container.innerHTML = '<div class=\"error\">Error searching hotels. Please try again.</div>';\r\n        }\r\n    }\r\n\r\n    async displayHotelResults(hotels) {\r\n        const container = document.getElementById('hotel-results');\r\n        container.innerHTML = '';\r\n\r\n        if (!hotels || hotels.length === 0) {\r\n            container.innerHTML = '<div class=\"error\">No hotels found for this location.</div>';\r\n            return;\r\n        }\r\n\r\n        hotels.forEach(hotel => {\r\n            const card = document.createElement('div');\r\n            card.className = 'result-card hotel-card';\r\n            card.innerHTML = `\r\n                <h4>${hotel.name}</h4>\r\n                <div class=\"hotel-rating\">\r\n                    <span class=\"stars\">${'★'.repeat(Math.floor(hotel.rating))}</span>\r\n                    <span class=\"review-count\">(${hotel.reviews.count} reviews)</span>\r\n                </div>\r\n                <p class=\"address\">${hotel.address}</p>\r\n                <div class=\"hotel-images\">\r\n                    ${hotel.images.slice(0, 3).map(img => \r\n                        `<img src=\"${img}\" alt=\"${hotel.name}\">`\r\n                    ).join('')}\r\n                </div>\r\n                <p class=\"price\">${hotel.price.currency} ${hotel.price.amount} per night</p>\r\n                <div class=\"hotel-actions\">\r\n                    <button class=\"book-button\" data-hotel-id=\"${hotel.id}\">Book Now</button>\r\n                    <button class=\"review-button\" data-hotel-id=\"${hotel.id}\">See Reviews</button>\r\n                </div>\r\n                <div class=\"reviews-container\" id=\"reviews-${hotel.id}\"></div>\r\n            `;\r\n\r\n            // Add event listeners\r\n            const reviewButton = card.querySelector('.review-button');\r\n            reviewButton.addEventListener('click', () => this.toggleHotelReviews(hotel.id));\r\n\r\n            card.querySelector('.book-button').addEventListener('click', () => {\r\n                this.showLocationDetails(hotel.id);\r\n            });\r\n\r\n            container.appendChild(card);\r\n        });\r\n    }\r\n\r\n    async toggleHotelReviews(hotelId) {\r\n        const reviewsContainer = document.getElementById(`reviews-${hotelId}`);\r\n        const isHidden = !reviewsContainer.classList.contains('active');\r\n\r\n        if (isHidden) {\r\n            reviewsContainer.innerHTML = '<div class=\"loading\">Loading reviews...</div>';\r\n            reviewsContainer.classList.add('active');\r\n\r\n            try {\r\n                const reviews = await this.travelAPI.getLocationReviews(hotelId);\r\n                this.displayHotelReviews(reviews, reviewsContainer);\r\n            } catch (error) {\r\n                reviewsContainer.innerHTML = '<div class=\"error\">Failed to load reviews.</div>';\r\n            }\r\n        } else {\r\n            reviewsContainer.classList.remove('active');\r\n            reviewsContainer.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    displayHotelReviews(reviews, container) {\r\n        if (!reviews || reviews.length === 0) {\r\n            container.innerHTML = '<div class=\"no-reviews\">No reviews yet.</div>';\r\n            return;\r\n        }\r\n\r\n        container.innerHTML = `\r\n            <div class=\"reviews-list\">\r\n                ${reviews.map(review => `\r\n                    <div class=\"review-item\">\r\n                        <div class=\"review-header\">\r\n                            <div class=\"review-meta\">\r\n                                <span class=\"review-stars\">${'★'.repeat(review.rating)}</span>\r\n                                <span class=\"review-title\">${review.title}</span>\r\n                                <span class=\"review-date\">\r\n                                    Traveled ${review.tripType || ''} - ${new Date(review.travelDate).toLocaleDateString()}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"reviewer-info\">\r\n                                <span class=\"reviewer-name\">${review.user.username}</span>\r\n                                ${review.user.userLocation ? \r\n                                    `<span class=\"reviewer-location\">${review.user.userLocation}</span>` : ''}\r\n                                <span class=\"reviewer-contributions\">\r\n                                    ${review.user.contributions} contributions\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p class=\"review-text\">${review.text}</p>\r\n                        \r\n                        ${review.photos.length > 0 ? `\r\n                            <div class=\"review-photos\">\r\n                                ${review.photos.map(photo => `\r\n                                    <img src=\"${photo.url}\" alt=\"${photo.caption || 'Review photo'}\" \r\n                                         title=\"${photo.caption || ''}\"\r\n                                `).join('')}\r\n                            </div>\r\n                        ` : ''}\r\n\r\n                        ${review.roomTip ? `\r\n                            <div class=\"room-tip\">\r\n                                <strong>Room Tip:</strong> ${review.roomTip}\r\n                            </div>\r\n                        ` : ''}\r\n\r\n                        <div class=\"review-footer\">\r\n                            <span class=\"review-date\">\r\n                                Reviewed: ${new Date(review.publishedDate).toLocaleDateString()}\r\n                            </span>\r\n                            <span class=\"helpful-votes\">👍 ${review.helpful.votes}</span>\r\n                            <span class=\"thanked\">❤️ ${review.helpful.thanked}</span>\r\n                        </div>\r\n\r\n                        ${review.managementResponse ? `\r\n                            <div class=\"management-response\">\r\n                                <div class=\"response-header\">\r\n                                    <strong>Response from management:</strong>\r\n                                    <span class=\"response-date\">\r\n                                        ${new Date(review.managementResponse.date).toLocaleDateString()}\r\n                                    </span>\r\n                                </div>\r\n                                <p>${review.managementResponse.text}</p>\r\n                            </div>\r\n                        ` : ''}\r\n                    </div>\r\n                `).join('')}\r\n            </div>\r\n            <button class=\"write-review-button\">Write a Review</button>\r\n        `;\r\n\r\n        container.querySelector('.write-review-button').addEventListener('click', () => \r\n            this.showReviewForm(container.closest('.hotel-card').querySelector('.book-button').dataset.hotelId)\r\n        );\r\n    }\r\n\r\n    showReviewForm(hotelId) {\r\n        const modal = document.createElement('div');\r\n        modal.className = 'review-modal';\r\n        modal.innerHTML = `\r\n            <div class=\"review-form\">\r\n                <h3>Write a Review</h3>\r\n                <div class=\"rating-input\">\r\n                    <label>Rating:</label>\r\n                    <div class=\"stars-input\">\r\n                        ${[1,2,3,4,5].map(num => \r\n                            `<span class=\"star\" data-rating=\"${num}\">★</span>`\r\n                        ).join('')}\r\n                    </div>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Review Title\" id=\"review-title\">\r\n                <textarea placeholder=\"Your Review\" id=\"review-text\"></textarea>\r\n                <input type=\"text\" placeholder=\"Your Name\" id=\"review-name\">\r\n                <div class=\"form-actions\">\r\n                    <button class=\"submit-review\">Submit</button>\r\n                    <button class=\"cancel-review\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.appendChild(modal);\r\n\r\n        // Add event listeners\r\n        modal.querySelector('.cancel-review').addEventListener('click', () => modal.remove());\r\n        \r\n        let selectedRating = 0;\r\n        const stars = modal.querySelectorAll('.star');\r\n        stars.forEach(star => {\r\n            star.addEventListener('click', (e) => {\r\n                selectedRating = parseInt(e.target.dataset.rating);\r\n                stars.forEach(s => s.classList.toggle('selected', \r\n                    parseInt(s.dataset.rating) <= selectedRating));\r\n            });\r\n        });\r\n\r\n        modal.querySelector('.submit-review').addEventListener('click', async () => {\r\n            const reviewData = {\r\n                rating: selectedRating,\r\n                title: modal.querySelector('#review-title').value,\r\n                text: modal.querySelector('#review-text').value,\r\n                userNickname: modal.querySelector('#review-name').value\r\n            };\r\n\r\n            try {\r\n                await this.travelAPI.submitReview(hotelId, reviewData);\r\n                modal.remove();\r\n                this.toggleHotelReviews(hotelId); // Refresh reviews\r\n            } catch (error) {\r\n                alert('Failed to submit review. Please try again.');\r\n            }\r\n        });\r\n    }\r\n\r\n    async searchEverywhereFromCity() {\r\n        const fromCode = document.getElementById('flight-from-code').value;\r\n        const date = document.getElementById('trip-start').value;\r\n\r\n        if (!fromCode || !date) {\r\n            alert('Please select a departure city and date');\r\n            return;\r\n        }\r\n\r\n        const container = document.getElementById('flight-results');\r\n        container.innerHTML = '<div class=\"loading\">Searching for destinations...</div>';\r\n\r\n        try {\r\n            const [year, month] = date.split('-');\r\n            const results = await this.travelAPI.searchEverywhereFromCity(fromCode, parseInt(month), parseInt(year));\r\n            this.displayEverywhereResults(results);\r\n        } catch (error) {\r\n            console.error('Error searching destinations:', error);\r\n            container.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>No Destinations Found</h3>\r\n                    <p>${error.message || 'Unable to find destinations from this city.'}</p>\r\n                    <p>Try:</p>\r\n                    <ul>\r\n                        <li>Different departure dates</li>\r\n                        <li>A different departure city</li>\r\n                        <li>Checking back later for updated prices</li>\r\n                    </ul>\r\n                </div>`;\r\n        }\r\n    }\r\n\r\n    displayEverywhereResults(destinations) {\r\n        const container = document.getElementById('flight-results');\r\n        container.innerHTML = '';\r\n\r\n        if (!destinations || destinations.length === 0) {\r\n            container.innerHTML = '<div class=\"error\">No destinations found.</div>';\r\n            return;\r\n        }\r\n\r\n        destinations.forEach(destination => {\r\n            const card = document.createElement('div');\r\n            card.className = 'result-card';\r\n            card.innerHTML = `\r\n                <h4>${destination.destination.city}, ${destination.destination.country}</h4>\r\n                <p class=\"carrier\">${destination.airlines.join(', ')}</p>\r\n                <p>Departure: ${new Date(destination.departureDate).toLocaleDateString()}</p>\r\n                <p>Return: ${new Date(destination.returnDate).toLocaleDateString()}</p>\r\n                <p class=\"price\">${destination.price.currency} ${destination.price.amount}</p>\r\n                <button class=\"book-button\" data-destination-code=\"${destination.destination.code}\">\r\n                    View Flights\r\n                </button>\r\n            `;\r\n\r\n            // Add click handler for the View Flights button\r\n            card.querySelector('.book-button').addEventListener('click', () => {\r\n                document.getElementById('flight-to').value = destination.destination.city;\r\n                document.getElementById('flight-to-code').value = destination.destination.code;\r\n                this.searchFlights(); // Search for specific flights to this destination\r\n            });\r\n\r\n            container.appendChild(card);\r\n        });\r\n    }\r\n\r\n    async showLocationDetails(locationId) {\r\n        const modal = document.createElement('div');\r\n        modal.className = 'location-modal';\r\n        modal.innerHTML = '<div class=\"loading\">Loading location details...</div>';\r\n        document.body.appendChild(modal);\r\n\r\n        try {\r\n            const details = await this.travelAPI.getLocationDetails(locationId);\r\n            modal.innerHTML = `\r\n                <div class=\"location-details\">\r\n                    <button class=\"close-button\">&times;</button>\r\n                    <h2>${details.name}</h2>\r\n                    \r\n                    <div class=\"location-photos\">\r\n                        ${details.photos?.slice(0, 5).map(photo => `\r\n                            <img src=\"${photo.url}\" alt=\"${photo.caption || details.name}\">\r\n                        `).join('') || ''}\r\n                    </div>\r\n\r\n                    <div class=\"rating-info\">\r\n                        <span class=\"stars\">${'★'.repeat(Math.floor(details.rating))}</span>\r\n                        <span class=\"review-count\">(${details.numberOfReviews} reviews)</span>\r\n                        ${details.priceLevel ? `<span class=\"price-level\">${'$'.repeat(details.priceLevel)}</span>` : ''}\r\n                    </div>\r\n\r\n                    <div class=\"location-description\">\r\n                        ${details.description || 'No description available'}\r\n                    </div>\r\n\r\n                    <div class=\"contact-info\">\r\n                        <p><strong>Address:</strong> ${[\r\n                            details.address.street1,\r\n                            details.address.street2,\r\n                            details.address.city,\r\n                            details.address.state,\r\n                            details.address.country,\r\n                            details.address.postalCode\r\n                        ].filter(Boolean).join(', ')}</p>\r\n                        ${details.phone ? `<p><strong>Phone:</strong> ${details.phone}</p>` : ''}\r\n                        ${details.email ? `<p><strong>Email:</strong> ${details.email}</p>` : ''}\r\n                        ${details.website ? `<p><strong>Website:</strong> <a href=\"${details.website}\" target=\"_blank\">Visit Website</a></p>` : ''}\r\n                    </div>\r\n\r\n                    ${details.amenities ? `\r\n                        <div class=\"amenities\">\r\n                            <h3>Amenities</h3>\r\n                            <ul>\r\n                                ${details.amenities.map(amenity => `<li>${amenity}</li>`).join('')}\r\n                            </ul>\r\n                        </div>\r\n                    ` : ''}\r\n\r\n                    <div class=\"map-container\">\r\n                        <iframe\r\n                            width=\"100%\"\r\n                            height=\"300\"\r\n                            frameborder=\"0\"\r\n                            style=\"border:0\"\r\n                            src=\"https://www.google.com/maps/embed/v1/place?key=YOUR_GOOGLE_MAPS_API_KEY&q=${details.coordinates.latitude},${details.coordinates.longitude}\"\r\n                            allowfullscreen>\r\n                        </iframe>\r\n                    </div>\r\n\r\n                    <a href=\"${details.webUrl}\" target=\"_blank\" class=\"tripadvisor-link\">\r\n                        View on TripAdvisor\r\n                    </a>\r\n                </div>\r\n            `;\r\n\r\n            // Add close button functionality\r\n            modal.querySelector('.close-button').addEventListener('click', () => modal.remove());\r\n\r\n            // Add photo gallery button\r\n            modal.querySelector('.location-photos').insertAdjacentHTML('afterend', `\r\n                <button class=\"view-all-photos\" data-location-id=\"${locationId}\">\r\n                    View All Photos\r\n                </button>\r\n            `);\r\n\r\n            modal.querySelector('.view-all-photos').addEventListener('click', (e) => {\r\n                this.showPhotoGallery(e.target.dataset.locationId);\r\n            });\r\n\r\n        } catch (error) {\r\n            modal.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>Error Loading Details</h3>\r\n                    <p>${error.message}</p>\r\n                    <button class=\"close-button\">Close</button>\r\n                </div>\r\n            `;\r\n            modal.querySelector('.close-button').addEventListener('click', () => modal.remove());\r\n        }\r\n    }\r\n\r\n    async showPhotoGallery(locationId) {\r\n        const modal = document.createElement('div');\r\n        modal.className = 'photo-gallery-modal';\r\n        modal.innerHTML = '<div class=\"loading\">Loading photos...</div>';\r\n        document.body.appendChild(modal);\r\n\r\n        try {\r\n            const photos = await this.travelAPI.getLocationPhotos(locationId);\r\n            modal.innerHTML = `\r\n                <div class=\"photo-gallery\">\r\n                    <button class=\"close-button\">&times;</button>\r\n                    <div class=\"gallery-grid\">\r\n                        ${photos.map(photo => `\r\n                            <div class=\"gallery-item\" data-photo-id=\"${photo.id}\">\r\n                                <img src=\"${photo.thumbnailUrl}\" \r\n                                     data-large-url=\"${photo.largeUrl}\"\r\n                                     alt=\"${photo.caption || 'Location photo'}\"\r\n                                     loading=\"lazy\">\r\n                                ${photo.caption ? `<div class=\"photo-caption\">${photo.caption}</div>` : ''}\r\n                            </div>\r\n                        `).join('')}\r\n                    </div>\r\n                    <div class=\"photo-viewer\">\r\n                        <button class=\"prev-photo\">&lt;</button>\r\n                        <div class=\"current-photo\"></div>\r\n                        <button class=\"next-photo\">&gt;</button>\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            // Add event listeners for gallery interaction\r\n            this.setupGalleryInteraction(modal, photos);\r\n\r\n        } catch (error) {\r\n            modal.innerHTML = `\r\n                <div class=\"error\">\r\n                    <h3>Error Loading Photos</h3>\r\n                    <p>${error.message}</p>\r\n                    <button class=\"close-button\">Close</button>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        modal.querySelector('.close-button').addEventListener('click', () => modal.remove());\r\n    }\r\n\r\n    setupGalleryInteraction(modal, photos) {\r\n        const galleryItems = modal.querySelectorAll('.gallery-item');\r\n        const photoViewer = modal.querySelector('.photo-viewer');\r\n        const currentPhoto = photoViewer.querySelector('.current-photo');\r\n        let currentIndex = 0;\r\n\r\n        // Show first photo by default\r\n        if (photos.length > 0) {\r\n            showPhoto(0);\r\n        }\r\n\r\n        // Add click handlers to thumbnails\r\n        galleryItems.forEach((item, index) => {\r\n            item.addEventListener('click', () => {\r\n                currentIndex = index;\r\n                showPhoto(currentIndex);\r\n            });\r\n        });\r\n\r\n        // Navigation buttons\r\n        modal.querySelector('.prev-photo').addEventListener('click', () => {\r\n            currentIndex = (currentIndex - 1 + photos.length) % photos.length;\r\n            showPhoto(currentIndex);\r\n        });\r\n\r\n        modal.querySelector('.next-photo').addEventListener('click', () => {\r\n            currentIndex = (currentIndex + 1) % photos.length;\r\n            showPhoto(currentIndex);\r\n        });\r\n\r\n        function showPhoto(index) {\r\n            const photo = photos[index];\r\n            currentPhoto.innerHTML = `\r\n                <img src=\"${photo.largeUrl}\" alt=\"${photo.caption || 'Location photo'}\">\r\n                <div class=\"photo-info\">\r\n                    <p class=\"caption\">${photo.caption || ''}</p>\r\n                    <p class=\"meta\">\r\n                        <span>By ${photo.user}</span>\r\n                        <span>Uploaded: ${new Date(photo.uploadDate).toLocaleDateString()}</span>\r\n                        <span>👍 ${photo.helpfulVotes}</span>\r\n                    </p>\r\n                </div>\r\n            `;\r\n\r\n            // Update active thumbnail\r\n            galleryItems.forEach(item => item.classList.remove('active'));\r\n            galleryItems[index].classList.add('active');\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize the Itinerary Manager when the page loads\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new ItineraryManager();\r\n}); "],"names":["ItineraryManager","constructor","this","currentItinerary","savedItineraries","travelAPI","TravelAPI","initializeEventListeners","loadSavedItineraries","addRippleEffectToButtons","initializeBookingListeners","setupAutocomplete","document","getElementById","addEventListener","createNewItinerary","saveItinerary","shareItinerary","updateDays","searchFlights","searchEverywhereFromCity","searchHotels","name","startDate","endDate","days","value","innerHTML","Date","currentDate","addDayToItinerary","setDate","getDate","date","dayElement","createElement","className","toLocaleDateString","weekday","month","day","toISOString","appendChild","querySelector","e","addActivity","target","dataset","activityElement","activitiesContainer","parentElement","insertBefore","lastElementChild","remove","alert","itinerary","collectActivities","JSON","parse","localStorage","getItem","push","setItem","stringify","querySelectorAll","forEach","activities","activity","time","description","textContent","listElement","li","loadItinerary","button","addRippleEffect","event","currentTarget","ripples","getElementsByClassName","length","ripple","classList","add","rect","getBoundingClientRect","size","Math","max","width","height","style","left","clientX","top","clientY","fromInput","toInput","setupCityAutocomplete","input","type","debounceTimer","suggestionsContainer","codeInput","contains","container","parentNode","clearTimeout","query","trim","setTimeout","async","suggestions","getCitySuggestions","category","language","map","location","id","code","address","city","state","country","join","item","selectedLocation","find","loc","formatLocationName","error","parts","fromCode","toCode","results","displayFlightResults","data","message","flights","flight","departureTime","itineraries","segments","departure","at","arrivalTime","arrival","card","iataCode","carrier","toLocaleTimeString","price","total","rating","displayHotelResults","hotels","hotel","repeat","floor","reviews","count","images","slice","img","currency","amount","toggleHotelReviews","showLocationDetails","hotelId","reviewsContainer","getLocationReviews","displayHotelReviews","review","title","tripType","travelDate","user","username","userLocation","contributions","text","photos","photo","url","caption","roomTip","publishedDate","helpful","votes","thanked","managementResponse","showReviewForm","closest","modal","num","body","selectedRating","stars","star","parseInt","s","toggle","reviewData","userNickname","submitReview","year","split","displayEverywhereResults","destinations","destination","airlines","departureDate","returnDate","locationId","details","getLocationDetails","_a","numberOfReviews","priceLevel","street1","street2","postalCode","filter","Boolean","phone","email","website","amenities","amenity","coordinates","latitude","longitude","webUrl","insertAdjacentHTML","showPhotoGallery","getLocationPhotos","thumbnailUrl","largeUrl","setupGalleryInteraction","galleryItems","currentPhoto","currentIndex","showPhoto","index","uploadDate","helpfulVotes"],"mappings":"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"}